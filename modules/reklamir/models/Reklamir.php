<?php

namespace app\modules\reklamir\models;

use app\modules\account\models\Account;
use app\modules\file\models\File;
use app\modules\file\models\FilePreview;
use Yii;

/**
 * This is the model class for table "reklamir".
 *
 * @property int $id
 * @property int $thing_id
 * @property int $file_id
 * @property int $account_id
 * @property int $show
 * @property int $status
 * @property int $name
 */
class Reklamir extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */



    const ST_ON = 0;
    const ST_OFF = 1;
    const ST_MODERATE = 2;

    public static  $arrTxtStatus = [ self::ST_ON => 'Активен', self::ST_OFF =>'Неактивен', self::ST_MODERATE =>'Модерация'];


    public $uploadFile;

    public $times;
    public $areas;

    public static function tableName()
    {
        return 'reklamir';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['thing_id', 'account_id','name'], 'required'],
            [['thing_id', 'file_id', 'account_id', 'show', 'status'], 'integer'],
            [['uploadFile'], 'file',  /*'extensions' => 'png, jpg'*/],
            [['name'], 'string','max' => 255],
            [['times','areas'], 'safe'],

        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'thing_id' => 'Устройство',
            'file_id' => 'Файл',
            'account_id' => 'Аккаунт',
            'show' => 'Показы',
            'status' => 'Статус',
            'name' => 'Название',
        ];
    }

    public function getAccount_r(){
        return $this->hasOne( Account::class, ['id' => 'account_id']);
    }

    public function getThing_r(){
        return $this->hasOne( Thing::class, ['id' => 'thing_id']);
    }

    public function getFile_r(){
        return $this->hasOne( File::class, ['id' => 'file_id']);
    }

    public function getDaytime_r(){
        return $this->hasMany( ReklamirDaytime::class, ['reklamir_id' => 'id']);
    }

    public function getArea_r(){
        return $this->hasMany( ReklamirArea::class, ['reklamir_id' => 'id']);
    }



    public function afterDelete()
    {
        $this->cleanFiles($this->file_id);
        foreach ( ReklamirDaytime::find()->where(['reklamir_id'=>$this->id])->all() as $item ){
            $item->delete();
        }
        foreach ( ReklamirArea::find()->where(['reklamir_id'=>$this->id])->all() as $item ){
            $item->delete();
        }
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }

    private function cleanFiles($file_id){
        $count_uses_for_file = (int)Reklamir::find()->where(['file_id'=>$file_id])->count();
        if (!$count_uses_for_file){
            $file = File::findOne(['id'=>$file_id]);
            if ($file!== null){
                $file->delete();
            }
        }
    }
}
